name: Deploy

on:
  push:
    branches: [ "master" ]

jobs:
  deploy-front:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/workflows/actions/prepare_env

      - name: Install deps
        working-directory: front
        run: npm install && npm install @rollup/rollup-linux-x64-gnu

      - name: Build front
        working-directory: front
        run: npm run build

      - name: Build docker image
        uses: ./.github/workflows/actions/build_image
        with:
          image: pursit-front
          actor: ${{ github.actor }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set kube context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBESECRET }}

      - name: Kube rollout restart
        run: kubectl rollout restart deployment/pursit-front -n pursit


  deploy-core:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/workflows/actions/prepare_env

      - name: Build core
        working-directory: core
        run: mvn install

      - name: Build docker image
        uses: ./.github/workflows/actions/build_image
        with:
          image: pursit-core
          actor: ${{ github.actor }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set kube context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBESECRET }}

      - name: Kube rollout restart
        run: kubectl rollout restart deployment/pursit-core -n pursit

  deploy-media:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/workflows/actions/prepare_env

      - name: Build media
        working-directory: media
        run: mvn install

      - name: Build docker image
        uses: ./.github/workflows/actions/build_image
        with:
          image: pursit-media
          actor: ${{ github.actor }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set kube context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBESECRET }}

      - name: Kube rollout restart
        run: kubectl rollout restart deployment/pursit-media -n pursit


  argo-sync:
    needs:
      - deploy-front
      - deploy-core
      - deploy-media

    runs-on: ubuntu-latest

    steps:
      - uses: clowdhaus/argo-cd-action/@main
        with:
          version: 2.6.7
          options:  --server argocd.umu-art.ru --grpc-web --auth-token ${{ secrets.ARGO_TOKEN }}
          command: app sync pursit --prune --timeout 300

      - uses: clowdhaus/argo-cd-action/@main
        with:
          version: 2.6.7
          options:  --server argocd.umu-art.ru --grpc-web --auth-token ${{ secrets.ARGO_TOKEN }}
          command: app wait pursit --health --timeout 300